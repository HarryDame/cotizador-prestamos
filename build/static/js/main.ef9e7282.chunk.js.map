{"version":3,"sources":["components/Header.js","components/Form.js","components/helpes.js","components/Message.js","components/Result.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","Form","props","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","useState","error","guardarError","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Message","Result","toFixed","Spinner","App","componente","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ef9e7282.chunk.js","sourcesContent":["import React,{Fragment} from 'react';\r\n\r\nfunction Header({titulo}){\r\n\r\n    return(\r\n        <Fragment>\r\n        <h1>{titulo}</h1>\r\n        </Fragment>\r\n    )\r\n}\r\n \r\nexport default Header;","import React, {Fragment, useState } from 'react';\r\nimport {calcularTotal} from './helpes';\r\n\r\nconst Form = (props) => {\r\nconst {cantidad, guardarCantidad, plazo, guardarPlazo, guardarTotal, guardarCargando} = props;\r\n//Definir state\r\nconst [error, guardarError] = useState(false);\r\n\r\n//Calculamos el prestamo\r\nconst calcularPrestamo = e =>{\r\n    e.preventDefault();\r\n    //Validar\r\n    if (cantidad === 0 || plazo === '') {\r\n        guardarError(true);\r\n        return;\r\n    }\r\n    //Eliminar el error previo\r\n    guardarError(false);\r\n    //Habilito el spinner\r\n    guardarCargando(true);\r\n    //Realizar cotizaciÃ³n (con spinner en la espera)\r\n    setTimeout(()=>{\r\n        const total = calcularTotal(cantidad,plazo);\r\n\r\n        //Guardar el total\r\n    guardarTotal(total);\r\n\r\n    //Deshabilitar el spinner\r\n    guardarCargando(false);\r\n}, 3000);\r\n    \r\n   \r\n    \r\n\r\n}\r\n\r\n    return ( \r\n        <Fragment>\r\n        <form onSubmit={calcularPrestamo}>\r\n          <div className=\"row\">\r\n              <div>\r\n                  <label>Cantidad Prestamo</label>\r\n                  <input \r\n                      className=\"u-full-width\" \r\n                      type=\"number\" \r\n                      placeholder=\"Ejemplo: 3000\" \r\n                      onChange={e => guardarCantidad(parseInt(e.target.value))}\r\n                  />\r\n              </div>\r\n              <div>\r\n                  <label>Plazo para Pagar</label>\r\n                  <select \r\n                      className=\"u-full-width\"\r\n                      onChange={e => guardarPlazo(parseInt(e.target.value))}\r\n                  >\r\n                      <option value=\"\">Seleccionar</option>\r\n                      <option value=\"3\">3 meses</option>\r\n                      <option value=\"6\">6 meses</option>\r\n                      <option value=\"12\">12 meses</option>\r\n                      <option value=\"24\">24 meses</option>\r\n                      <option value=\"48\">48 meses</option>\r\n                  </select>\r\n              </div>\r\n              <div>\r\n                  <input \r\n                      type=\"submit\" \r\n                      value=\"Calcular\" \r\n                      className=\"button-primary u-full-width\" \r\n                  />\r\n              </div>\r\n          </div>\r\n        </form>\r\n{(error)?<p className=\"error\">Todos los campos son obligatoiros</p>:null }\r\n\r\n\r\n</Fragment>\r\n     );\r\n}\r\nexport default Form;","export function calcularTotal(cantidad, plazo) {\r\n    //Cantidades\r\n    //0 - 50000 = 36%    \r\n    //50001 - 200000 = 28\r\n    //200001 - 500000 = 22% \r\n    //500001 - 900000 = 18%\r\n    //900001 - 1700000 = 16%     \r\n    //+1700000 = 10%           \r\n\r\n    let totalCantidad;\r\n    if (cantidad <= 50000) {\r\n        totalCantidad = cantidad * .36;\r\n    } else if (cantidad > 50000 && cantidad < 200000) {\r\n        totalCantidad = cantidad * .28\r\n    } else if (cantidad > 200000 && cantidad < 500000) {\r\n        totalCantidad = cantidad * .22\r\n    } else if (cantidad > 500000 && cantidad < 900000) {\r\n        totalCantidad = cantidad * .18\r\n    } else if (cantidad > 900000 && cantidad < 1800000) {\r\n        totalCantidad = cantidad * .16\r\n    } else if (cantidad > 1800000) {\r\n        totalCantidad = cantidad * .10\r\n    }\r\n\r\n    //Plazos\r\n    //3 = 7%\r\n    //6 = 12%\r\n    //12 = 15%\r\n    //24 = 20%\r\n    //48 = 30%\r\n    let totalPlazo = 0;\r\n    switch (plazo) {\r\n        case 3:\r\n            totalPlazo = cantidad * .07;\r\n            break;\r\n\r\n        case 6:\r\n            totalPlazo = cantidad * .12;\r\n            break;\r\n        case 12:\r\n            totalPlazo = cantidad * .15;\r\n            break;\r\n        case 24:\r\n            totalPlazo = cantidad * .20;\r\n            break;\r\n        case 48:\r\n            totalPlazo = cantidad * .30;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return totalPlazo + totalCantidad + cantidad;\r\n\r\n}","import React from 'react';\r\n\r\nconst Message = () => (\r\n    <p>Agregue cantidad y plazo a pagar para cotizar</p>\r\n);\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nconst Result = ({total, cantidad, plazo}) => \r\n    (\r\n        <div className=\"u-full-width resultado\">\r\n            <h2>Resumen</h2>\r\n    <p>La cantidad solicitada es: $ {cantidad}</p>\r\n    <p>A pagar en: {plazo} meses</p>\r\n    <p>Su pago mensual es de: $ { (total / plazo).toFixed(2) }</p>\r\n    <p>Total a pagar: ${(total).toFixed(2)}</p>\r\n        </div>\r\n    );\r\n\r\n\r\nexport default Result;","import React from 'react';\r\nimport './Spinner.css';\r\nconst Spinner = () => {\r\n    return ( <\r\n        div className = \"spinner\" >\r\n        <div className = \"rect1\" > </div> \r\n        <div className = \"rect2\" > </div> \r\n        <div className = \"rect3\" > </div> \r\n        <div className = \"rect4\" > </div> \r\n        <div className = \"rect5\" > </div> \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React,{Fragment, useState} from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Message from './components/Message';\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\n\n\nfunction App() {\n// Definir el state\n  const [cantidad, guardarCantidad] = useState(0);\n  const [plazo, guardarPlazo] = useState(\"\");\n  const [total ,guardarTotal] = useState(0);\n  const [cargando, guardarCargando] = useState(false);\n\n\nlet componente;\n\nif (cargando) {\n  componente = <Spinner/> \n}else if (total === 0) {\n  componente = <Message/>\n} else {\n  componente = <Result\n  total={total}\n  plazo={plazo}\n  cantidad={cantidad}\n  \n  />\n}\n\n\n\n  return (\n    <Fragment>      \n      <Header\n      titulo=\"Cotizador de Prestamos\"\n      \n      />\n\n    <div className=\"container\">\n    <Form\n    cantidad={cantidad}\n    guardarCantidad={guardarCantidad}\n    plazo={plazo}\n    guardarPlazo={guardarPlazo}\n    guardarTotal={guardarTotal}\n    guardarCargando={guardarCargando}\n    />\n    <div className=\"mensajes\">\n    {componente}</div>\n  </div>\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}